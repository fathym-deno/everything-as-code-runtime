{
  "name": "@fathym/everything-as-code-runtime",
  "lock": false,
  "tasks": {
    "build": "deno task build:fmt && deno task build:lint && deno task build:main",
    "build:dev": "deno run -A dev.ts build",
    "build:docker": "docker build --no-cache -t everything-as-code-runtime -f DOCKERFILE .",
    "build:fmt": "deno fmt",
    "build:lint": "deno lint",
    "build:main": "deno run -A main.ts build",
    "clean:docker": "docker stop everything-as-code-runtime || true && docker rm everything-as-code-runtime || true",
    "deploy": "deno task build && deno task test && npx ftm git",
    "deploy:docker": "docker run --name everything-as-code-runtime --network eac-runtimes --env-file .env.docker -dp 127.0.0.1:6131:6131 everything-as-code-runtime",
    "dev": "deno run -A --watch=apps/,configs/,data/,routes/,src/,static/ dev.ts",
    "network:docker": "docker network create eac-runtimes || true",
    "refresh:docker": "deno task build:docker && deno task network:docker && deno task clean:docker && deno task deploy:docker",
    "start": "deno run -A main.ts",
    "test": "deno test -A tests/tests.ts --coverage=cov --parallel --trace-leaks"
  },
  "imports": {
    // "@fathym/atomic": "../fathym-atomic/mod.ts",
    "@fathym/atomic": "https://deno.land/x/fathym_atomic_design_kit@v0.0.143/mod.ts",
    // "@fathym/atomic/": "../fathym-atomic/",
    "@fathym/atomic/": "https://deno.land/x/fathym_atomic_design_kit@v0.0.143/",
    // "@fathym/atomic-icons": "../atomic-icons/mod.ts",
    "@fathym/atomic-icons": "https://deno.land/x/fathym_atomic_icons@v0.0.44/mod.ts",
    "@fathym/atomic-icons/plugin": "https://deno.land/x/fathym_atomic_icons@v0.0.44/plugin.ts",
    "$fathym/atomic-icons": "./build/iconset/icons/_exports.ts",
    // "@fathym/atomic-icons/browser": "../atomic-icons/browser.ts",
    "@fathym/atomic-icons/browser": "https://deno.land/x/fathym_atomic_icons@v0.0.44/browser.ts",
    "@fathym/common": "https://deno.land/x/fathym_common@v0.0.185/mod.ts",
    "@fathym/common/oauth": "https://deno.land/x/fathym_common@v0.0.185/oauth.ts",
    // "@fathym/eac": "../everything-as-code/mod.ts",
    "@fathym/eac": "https://deno.land/x/fathym_everything_as_code@v0.0.415/mod.ts",
    // "@fathym/eac/api": "../everything-as-code-api/mod.ts",
    "@fathym/eac/api": "https://deno.land/x/fathym_everything_as_code_api@v0.0.44/mod.ts",
    // "@fathym/eac/runtime": "../eac-runtime/mod.ts",
    "@fathym/eac/runtime": "https://deno.land/x/fathym_eac_runtime@v0.0.284/mod.ts",
    // "@fathym/eac/runtime/": "../eac-runtime/",
    "@fathym/eac/runtime/": "https://deno.land/x/fathym_eac_runtime@v0.0.284/",
    // "@fathym/eac/runtime/browser": "../eac-runtime/browser.ts",
    "@fathym/eac/runtime/browser": "https://deno.land/x/fathym_eac_runtime@v0.0.284/browser.ts",
    "@fathym/ioc": "https://deno.land/x/fathym_ioc@v0.0.10/mod.ts",
    "@fathym/msal": "https://deno.land/x/msal@v0.0.31/mod.ts",
    // "@fathym/synaptic": "../synaptic/mod.ts",
    "@fathym/synaptic": "https://deno.land/x/fathym_synaptic@v0.0.67/mod.ts",
    // "@fathym/synaptic/": "../synaptic/",
    "@fathym/synaptic/": "https://deno.land/x/fathym_synaptic@v0.0.67/",
    "preact": "https://esm.sh/preact@10.20.1",
    "preact/": "https://esm.sh/preact@10.20.1/",
    "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.4.1",
    "@preact/signals": "https://esm.sh/*@preact/signals@1.2.3",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.6.0",
    "tailwindcss": "npm:tailwindcss@3.4.1",
    "tailwindcss/": "npm:/tailwindcss@3.4.1/",
    "tailwindcss/plugin": "npm:/tailwindcss@3.4.1/plugin.js",
    "tailwindcss/unimportant": "npm:tailwindcss-unimportant@2.1.1"
  },
  "exclude": ["**/_eac-runtime/*"],
  "lint": {
    "include": ["apps/", "configs/", "src/", "tests/"],
    "exclude": [],
    "rules": {
      "tags": ["recommended"],
      "include": ["ban-untagged-todo"],
      "exclude": []
    }
  },
  "fmt": {
    "include": ["apps/", "configs/", "src/", "tests/"],
    "exclude": [],
    "indentWidth": 2,
    "lineWidth": 100,
    "proseWrap": "preserve",
    "semiColons": true,
    "singleQuote": true,
    "useTabs": false
  },
  "unstable": ["kv"],
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact"
  }
}
